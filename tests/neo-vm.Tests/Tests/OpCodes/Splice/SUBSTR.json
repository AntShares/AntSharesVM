{
  "category": "Splice",
  "name": "SUBSTR",
  "tests": [
    {
      "name": "Without 3 items",
      "script": "12137f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 2,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "Integer",
                    "value": 3
                  },
                  {
                    "type": "Integer",
                    "value": 2
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "StepInto"
          ],
          "result": {
            "state": "Fault"
          }
        }
      ]
    },
    {
      "name": "With negative count",
      "script": "10100f7f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 3,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "Integer",
                    "value": -1
                  },
                  {
                    "type": "ByteArray",
                    "value": ""
                  },
                  {
                    "type": "ByteArray",
                    "value": ""
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "StepInto"
          ],
          "result": {
            "state": "Fault"
          }
        }
      ]
    },
    {
      "name": "With map as string",
      "script": "c710107f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 3,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "ByteArray",
                    "value": ""
                  },
                  {
                    "type": "ByteArray",
                    "value": ""
                  },
                  {
                    "type": "Map",
                    "value": {}
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "StepInto"
          ],
          "result": {
            "state": "Fault"
          }
        }
      ]
    },
    {
      "name": "With map as count",
      "script": "1010c77f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 3,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "Map",
                    "value": {}
                  },
                  {
                    "type": "ByteArray",
                    "value": ""
                  },
                  {
                    "type": "ByteArray",
                    "value": ""
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "StepInto"
          ],
          "result": {
            "state": "Fault"
          }
        }
      ]
    },
    {
      "name": "With map as index",
      "script": "10c7107f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 3,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "ByteArray",
                    "value": ""
                  },
                  {
                    "type": "Map",
                    "value": {}
                  },
                  {
                    "type": "ByteArray",
                    "value": ""
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "StepInto"
          ],
          "result": {
            "state": "Fault"
          }
        }
      ]
    },
    {
      "name": "With negative index",
      "script": "100f107f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 3,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "ByteArray",
                    "value": ""
                  },
                  {
                    "type": "Integer",
                    "value": -1
                  },
                  {
                    "type": "ByteArray",
                    "value": ""
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "StepInto"
          ],
          "result": {
            "state": "Fault"
          }
        }
      ]
    },
    {
      "name": "Overflow string index",
      "script": "0c02000119127f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 5,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "Integer",
                    "value": 2
                  },
                  {
                    "type": "Integer",
                    "value": 9
                  },
                  {
                    "type": "ByteArray",
                    "value": "0x0001"
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "StepInto"
          ],
          "result": {
            "state": "Fault"
          }
        }
      ]
    },
    {
      "name": "Overflow string count",
      "script": "0c0a0001020304050607080912197f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 13,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "Integer",
                    "value": 9
                  },
                  {
                    "type": "Integer",
                    "value": 2
                  },
                  {
                    "type": "ByteArray",
                    "value": "0x00010203040506070809"
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "Execute"
          ],
          "result": {
            "state": "Halt",
            "resultStack": [
              {
                "type": "ByteArray",
                "value": "0x0203040506070809"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Real test",
      "script": "0c0a0001020304050607080912117f",
      "steps": [
        {
          "actions": [
            "StepInto",
            "StepInto",
            "StepInto"
          ],
          "result": {
            "state": "Break",
            "invocationStack": [
              {
                "instructionPointer": 13,
                "nextInstruction": "SUBSTR",
                "evaluationStack": [
                  {
                    "type": "Integer",
                    "value": 1
                  },
                  {
                    "type": "Integer",
                    "value": 2
                  },
                  {
                    "type": "ByteArray",
                    "value": "0x00010203040506070809"
                  }
                ]
              }
            ]
          }
        },
        {
          "actions": [
            "Execute"
          ],
          "result": {
            "state": "Halt",
            "resultStack": [
              {
                "type": "ByteArray",
                "value": "0x02"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Integer overflow Test",
      "script": "0cffc04fd0000000c0403ffff7f7f",
      "steps": [
        {
          "actions": [
            "Execute"
          ],
          "result": {
            "state": "Halt",
            "resultStack": [
              {
                "type": "ByteArray",
                "value": "QUE="
              }
            ]
          }
        }
      ]
    }
  ]
}